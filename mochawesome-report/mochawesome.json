{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-02-15T17:16:52.713Z",
    "end": "2023-02-15T17:18:20.291Z",
    "duration": 87578,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2c174867-8b14-43f7-89a4-80f556778dc1",
      "title": "",
      "fullFile": "/Users/user-2/Documents/projects/shopify-test-automation/tests/clean/clean-shopify.js",
      "file": "/tests/clean/clean-shopify.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1479712d-3a22-4bc5-9598-3f58fe7910b1",
          "title": "Clean orders",
          "fullFile": "/Users/user-2/Documents/projects/shopify-test-automation/tests/clean/clean-shopify.js",
          "file": "/tests/clean/clean-shopify.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sync digital product with physical component order",
              "fullTitle": "Clean orders Sync digital product with physical component order",
              "timedOut": null,
              "duration": 87223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "logger.stepNumber(1);\nlogger.step('Navigate to Shopify');\nawait ShopifyLoginPageHelper.navigateToShopify();\nlogger.stepNumber(2);\nlogger.step('Login to Shopify');\nawait ShopifyLoginPageHelper.loginToShopify(credentials.email, credentials.password);\nlogger.stepNumber(3);\nlogger.step('Click on Orders option');\nawait waitHelper.wait(4000);\nawait ShopifyCommonPageHelper.clickOnOrdersOption();\nawait waitHelper.wait(4000);\nlogger.stepNumber(4);\nlogger.step('Delete the first 50 shopify orders');\nfor (let i = 0; i < 50; i++) {\n\tlogger.subStep('Click on the fist cell');\n\tawait ShopifyOrdersHelper.clickOnFirstOrderCell();\n\ttry {\n\t\tlogger.subStep('Click on fulfill button');\n\t\tawait ShopifyOrdersHelper.clickOnFulfillButton();\n\t} catch (e) {}\n\ttry {\n\t\tlogger.subStep('Insert a random tracking number');\n\t\tawait ShopifyOrdersHelper.insertTranckingNumber('1234');\n\t\tlogger.subStep('Insert a random shipping carrier');\n\t\tawait ShopifyOrdersHelper.insertShippingCarrier('something');\n\t\tlogger.subStep('Insert a random url');\n\t\tawait ShopifyOrdersHelper.insertTrackingUrl();\n\t} catch (e) {}\n\ttry {\n\t\tlogger.subStep('Click on fulfill button');\n\t\tawait ShopifyOrdersHelper.clickOnFulfillButton();\n\t} catch (e) {}\n\tawait waitHelper.wait(5000);\n\tlogger.stepNumber(5);\n\tlogger.step('Delete order');\n\tawait ShopifyOrdersHelper.deleteOrder(false);\n\tawait waitHelper.wait(5000);\n}",
              "err": {
                "message": "AssertionError: Element: <<(//a[contains(@href, \"admin/orders\")])[8]/span>> not found: expected false to be true",
                "estack": "AssertionError: Element: <<(//a[contains(@href, \"admin/orders\")])[8]/span>> not found: expected false to be true\n    at WaitHelper.waitForElementPresent (components/wait-helper.js:84:10)\n    at async ShopifyOrdersPageHelper.clickOnFirstOrderCell (page-object/shopify-pages/orders/shopify-orders.helper.js:32:3)\n    at async Context.<anonymous> (tests/clean/clean-shopify.js:35:4)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "f5384315-a948-4a4f-bb61-797ce80be2ae",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f5384315-a948-4a4f-bb61-797ce80be2ae"
          ],
          "pending": [],
          "skipped": [],
          "duration": 87223,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}